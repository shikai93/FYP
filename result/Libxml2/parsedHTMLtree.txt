HTMLtree.c : implementation of access function for an HTML tree. See Copyright for the status of this software. daniel@veillard.com

for memset() only !

Getting/Setting encoding meta tags

htmlGetMetaEncoding: @doc: the document Encoding definition lookup in the Meta tags Returns the current encoding as flagged in the HTML source

Search the html

Search the head

Search the meta elements

htmlSetMetaEncoding: @doc: the document @encoding: the encoding string Sets the current encoding in the Meta tags NOTE: this will not change the document content encoding, just the META flag associated. Returns 0 in case of success and -1 in case of error

html isn't a real encoding it's just libxml2 way to get entities

Search the html

Search the head

Search and update all the remaining the meta elements carrying encoding informations

Create a new Meta element with the right attributes

change the document only if there is a real encoding change

booleanHTMLAttrs: These are the HTML attributes which will be output in minimized form, i.e. <option selected="selected"> will be output as <option selected>, as per XSLT 1.0 16.2 "HTML Output Method"

htmlIsBooleanAttr: @name: the name of the attribute to check Determine if a given attribute is a boolean attribute. returns: false if the attribute is not boolean, true otherwise.

private routine exported from xmlIO.c

Output error handlers

htmlSaveErrMemory: @extra: extra informations Handle an out of memory condition

htmlSaveErr: @code: the error number @node: the location of the error. @extra: extra informations Handle an out of memory condition

Dumping HTML tree content to a simple buffer

htmlNodeDumpFormat: @buf: the HTML buffer output @doc: the document @cur: the current node @format: should formatting spaces been added Dump an HTML node, recursive behaviour,children are printed too. Returns the number of byte written or -1 in case of error

htmlNodeDump: @buf: the HTML buffer output @doc: the document @cur: the current node Dump an HTML node, recursive behaviour,children are printed too, and formatting returns are added. Returns the number of byte written or -1 in case of error

htmlNodeDumpFileFormat: @out: the FILE pointer @doc: the document @cur: the current node @encoding: the document encoding @format: should formatting spaces been added Dump an HTML node, recursive behaviour,children are printed too. TODO: if encoding == NULL try to save in the doc encoding returns: the number of byte written or -1 in case of failure.

Fallback to HTML or ASCII when the encoding is unspecified

save the content to a temp buffer.

htmlNodeDumpFile: @out: the FILE pointer @doc: the document @cur: the current node Dump an HTML node, recursive behaviour,children are printed too, and formatting returns are added.

htmlDocDumpMemoryFormat: @cur: the document @mem: OUT: the memory pointer @size: OUT: the memory length @format: should formatting spaces been added Dump an HTML document in memory and return the xmlChar and it's size. It's up to the caller to free the memory.

Not supported yet

Fallback to HTML or ASCII when the encoding is unspecified

htmlDocDumpMemory: @cur: the document @mem: OUT: the memory pointer @size: OUT: the memory length Dump an HTML document in memory and return the xmlChar and it's size. It's up to the caller to free the memory.

Dumping HTML tree content to an I/O output buffer

htmlDtdDumpOutput: @buf: the HTML buffer output @doc: the document @encoding: the encoding string TODO: check whether encoding is needed Dump the HTML document DTD, if any.

htmlAttrDumpOutput: @buf: the HTML buffer output @doc: the document @cur: the attribute pointer @encoding: the encoding string Dump an HTML attribute

TODO: The html output method should not escape a & character occurring in an attribute value immediately followed by a { character (see Section B.7.1 of the HTML 4.0 Recommendation).

htmlAttrListDumpOutput: @buf: the HTML buffer output @doc: the document @cur: the first attribute pointer @encoding: the encoding string Dump a list of HTML attributes

htmlNodeListDumpOutput: @buf: the HTML buffer output @doc: the document @cur: the first node @encoding: the encoding string @format: should formatting spaces been added Dump an HTML node list, recursive behaviour,children are printed too.

htmlNodeDumpFormatOutput: @buf: the HTML buffer output @doc: the document @cur: the current node @encoding: the encoding string @format: should formatting spaces been added Dump an HTML node, recursive behaviour,children are printed too.

Special cases.

Get specific HTML info for that node.

p, pre, param

p, pre, param

Uses the OutputBuffer property to automatically convert invalids to charrefs

p, pre, param

p, pre, param

p, pre, param

htmlNodeDumpOutput: @buf: the HTML buffer output @doc: the document @cur: the current node @encoding: the encoding string Dump an HTML node, recursive behaviour,children are printed too, and formatting returns/spaces are added.

htmlDocContentDumpFormatOutput: @buf: the HTML buffer output @cur: the document @encoding: the encoding string @format: should formatting spaces been added Dump an HTML document.

force to output the stuff as HTML, especially for entities

htmlDocContentDumpOutput: @buf: the HTML buffer output @cur: the document @encoding: the encoding string Dump an HTML document. Formating return/spaces are added.

Saving functions front-ends

htmlDocDump: @f: the FILE @cur: the document Dump an HTML document to an open FILE. returns: the number of byte written or -1 in case of failure.

Not supported yet

Fallback to HTML or ASCII when the encoding is unspecified

htmlSaveFile: @filename: the filename (or URL) @cur: the document Dump an HTML document to a file. If @filename is "-" the stdout file is used. returns: the number of byte written or -1 in case of failure.

Not supported yet

Fallback to HTML or ASCII when the encoding is unspecified

save the content to a temp buffer.

htmlSaveFileFormat: @filename: the filename @cur: the document @format: should formatting spaces been added @encoding: the document encoding Dump an HTML document to a file using a given encoding. returns: the number of byte written or -1 in case of failure.

Not supported yet

Fallback to HTML or ASCII when the encoding is unspecified

save the content to a temp buffer.

htmlSaveFileEnc: @filename: the filename @cur: the document @encoding: the document encoding Dump an HTML document to a file using a given encoding and formatting returns/spaces are added. returns: the number of byte written or -1 in case of failure.

LIBXML_OUTPUT_ENABLED

LIBXML_HTML_ENABLED

libxml.h

html

head

meta

head

meta

meta

http-equiv

Content-Type

content

charset=

Charset=

CHARSET=

charset =

Charset =

CHARSET =



\t

t a real encoding it

html

text/html; charset=%s

html

head

meta

head

meta

meta

http-equiv

Content-Type

content

meta

http-equiv

Content-Type

content

content

selected

HTML Output Method

checked

compact

declare

defer

disabled

ismap

multiple

nohref

noresize

noshade

nowrap

readonly

selected

string is not in UTF-8\n

invalid character value\n

unknown encoding %s\n

HTML has no DOCTYPE\n

unexpected error number\n

allocating HTML output buffer

HTML

ascii

s size. * It

HTML

ascii

s size. * It

<!DOCTYPE

PUBLIC



SYSTEM

>\n



:

=

href

action

src

name

a

@/:=?;#%&,+

=\"\"

script

style

<!--

-->

<?



>

&

;

<

:

>

p

\n

html

body

>

></

:

>

p

\n

>

p

\n

p

\n

</

:

>

p

\n

\n

HTML

ascii

-

HTML

ascii

UTF-8

HTML

ascii

elfgcchack.h

Summary: specific APIs to process HTML tree, especially serialization Description: this module implements a few function needed to process tree in an HTML specific way. Copy: See Copyright for the status of this software. Author: Daniel Veillard

HTML_TEXT_NODE: Macro. A text node in a HTML document is really implemented the same way as a text node in an XML document.

HTML_ENTITY_REF_NODE: Macro. An entity reference in a HTML document is really implemented the same way as an entity reference in an XML document.

HTML_COMMENT_NODE: Macro. A comment in a HTML document is really implemented the same way as a comment in an XML document.

HTML_PRESERVE_NODE: Macro. A preserved node in a HTML document is really implemented the same way as a CDATA section in an XML document.

HTML_PI_NODE: Macro. A processing instruction in a HTML document is really implemented the same way as a processing instruction in an XML document.

LIBXML_OUTPUT_ENABLED

LIBXML_HTML_ENABLED

__HTML_TREE_H__

C

