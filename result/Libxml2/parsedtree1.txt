section: Tree synopsis: Navigates a tree to print element names purpose: Parse a file to a tree, use xmlDocGetRootElement() to get the root element, then walk the document and print all the element name in document order. usage: tree1 filename_or_URL test: tree1 test2.xml > tree1.tmp ; diff tree1.tmp tree1.res ; rm tree1.tmp author: Dodji Seketeli copy: see Copyright for the status of this software.

To compile this file using gcc you can type gcc `xml2-config --cflags --libs` -o xmlexample libxml2-example.c

print_element_names: @a_node: the initial xml node to consider. Prints the names of the all the xml elements that are siblings or children of a given xml node.

Simple example to parse a file called "file.xml", walk down the DOM, and print the name of the xml elements nodes.

this initialize the library and check potential ABI mismatches between the version it was compiled for and the actual shared library used.

arse the file and get the DOM

et the root element node

ree the document

Free the global variables that may have been allocated by the parser.

node type: Element, name: %s\n

file.xml

error: could not parse file %s\n

Tree support not compiled in\n

