Copyright 1999-2017 The OpenSSL Project Authors. All Rights Reserved. Licensed under the OpenSSL license (the "License"). You may not use this file except in compliance with the License. You can obtain a copy in the file LICENSE in the source distribution or at https://www.openssl.org/source/license.html

These functions take a string in UTF8, ASCII or multibyte form and a mask of permissible ASN1 string types. It then works out the minimal type (using the order Numeric < Printable < IA5 < T61 < BMP < Universal < UTF8) and creates a string of the correct type with the supplied data. Yes this is horrible: it has to be :-( The 'ncopy' form checks minimum and maximum size limits too.

First do a string check and work out the number of characters

This counts the characters and does utf8 syntax checking

Now work out minimal type (if any)

Now work out output format and string type

If both the same type just copy across

Work out how much space the destination will need

This function traverses a string and passes the value of each character to an optional function along with a void argument.

Various utility functions for traverse_string

Just count number of characters

Determine size of output as a UTF8 String

Determine the "type" of a string: check each character against a supplied "mask".

Copy one byte per character ASCII like strings

Copy two byte per character BMPStrings

Copy four byte per character UniversalStrings

Copy to a UTF8String

We already know there is enough room so pass 0xff as the length

www.openssl.org/source/license.html

License

internal/ctype.h

internal/cryptlib.h

ncopy

%ld

minsize=

%ld

maxsize=

type

mask



0xff))

0xffff))

0xff);

0xff);

0xff);

0xff);

0xff);

0xff);

0xff

0xff,

