Copyright 1995-2016 The OpenSSL Project Authors. All Rights Reserved. Licensed under the OpenSSL license (the "License"). You may not use this file except in compliance with the License. You can obtain a copy in the file LICENSE in the source distribution or at https://www.openssl.org/source/license.html

This stuff appears to be completely unused, so is deprecated

For a 32 bit machine 2 - 4 == 128 3 - 8 == 256 4 - 16 == 512 5 - 32 == 1024 6 - 64 == 2048 7 - 128 == 4096 8 - 256 == 8192

(1<<bn_limit_bits)

(1<<bn_limit_bits_low)

(1<<bn_limit_bits_high)

(1<<bn_limit_bits_mont)

This is used by bn_expand2()

The caller MUST check that words > b->dmax before calling this

This is an internal function that should not be used in applications. It ensures that 'b' has enough room for a 'words' word number and initialises any unused part of b->d with leading zeros. It is mostly used by the various BIGNUM routines. If there is an error, NULL is returned. If not, 'b' is returned.

a->top == 0

Skip leading zero's.

need to call this due to clear byte at top if avoiding having the top bit set (-ve number)

ignore negative

Add leading zeroes if necessary

Skip trailing zeroes.

need to call this due to clear byte at top if avoiding having the top bit set (-ve number)

Add trailing zeroes if necessary

Here follows a specialised variants of bn_cmp_words(). It has the capability of performing the operation on arrays of different sizes. The sizes of those arrays is expressed through cl, which is the common length ( basically, min(len(a),len(b)) ), and dl, which is the delta between the two lengths, calculated as len(a)-len(b). All lengths are the number of BN_ULONGs...

a < b

a > b

Constant-time conditional swap of a and b. a and b are swapped if condition is not 0. The code assumes that at most one bit of condition is set. nwords is the number of words to swap. The code assumes that at least nwords are allocated in both a and b, and that no more than nwords are used by either a or b. a and b cannot be the same number

Fallthrough

Fallthrough

Fallthrough

Fallthrough

Fallthrough

Fallthrough

Fallthrough

Fallthrough

Fallthrough

Fallthrough

Bits of security, see SP800-57

Populate a BN_GENCB structure with an "old"-style callback

Populate a BN_GENCB structure with a "new"-style callback

www.openssl.org/source/license.html

License

internal/cryptlib.h

bn_lcl.h

b

words

b

old

new

0x00908000L

0xffffffff00000000L)

0xffff000000000000L)

0xff00000000000000L)

0x0000ff0000000000L)

0xffffffff00000000LL)

0xffff000000000000LL)

0xff00000000000000LL)

0x0000ff0000000000LL)

0xffff0000L)

0xff000000L)

0xff00L)

0x00908000L

0xff;

0xff;

