Copyright 2011-2017 The OpenSSL Project Authors. All Rights Reserved. Licensed under the OpenSSL license (the "License"). You may not use this file except in compliance with the License. You can obtain a copy in the file LICENSE in the source distribution or at https://www.openssl.org/source/license.html

X9.31 routines for prime derivation

X9.31 prime derivation. This is used to generate the primes pi (p1, p2, q1, q2) from a parameter Xpi by checking successive odd integers.

NB 27 MR is specified in X9.31

This is the main X9.31 prime derivation function. From parameters Xp1, Xp2 and Xp derive the prime p. If the parameters p1 or p2 are not NULL they will be returned too: this is needed for testing.

Only even e supported

First set p to value of Rp

p now equals Rp

p now equals Yp0

X9.31 specifies 8 MR and 1 Lucas test or any prime test offering similar or better guarantees 50 MR is considerably better.

Generate pair of parameters Xp, Xq for X9.31 prime generation. Note: nbits parameter is sum of number of bits in both.

Number of bits for each prime is of the form 512+128s for s = 0, 1, ...

The random value Xp must be between sqrt(2) 2^(nbits-1) and 2^nbits - 1. By setting the top two bits we ensure that the lower bound is exceeded.

Check that |Xp - Xq| > 2^(nbits - 100)

Generate primes using X9.31 algorithm. Of the values p, p1, p2, Xp1 and Xp2 only 'p' needs to be non-NULL. If any of the others are not NULL the relevant parameter will be stored in it. Due to the fact that |Xp - Xq| > 2^(nbits - 100) must be satisfied Xp and Xq are generated using the previous function and supplied as input.

www.openssl.org/source/license.html

License

bn_lcl.h

p

0xff))

