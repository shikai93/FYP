Copyright 2013-2016 The OpenSSL Project Authors. All Rights Reserved. Licensed under the OpenSSL license (the "License"). You may not use this file except in compliance with the License. You can obtain a copy in the file LICENSE in the source distribution or at https://www.openssl.org/source/license.html

Key Agreement Recipient Info (KARI) routines

Retrieve recipient encrypted keys from a kari

Derive KEK and decrypt/encrypt with it to produce either the original CEK or the encrypted CEK.

Key encryption key

Derive KEK

Set KEK in context

obtain output length of ciphered key

FIXME: WHY IS kari->pctx freed here? /RL

Setup all parameters to derive KEK

Attempt to decrypt CEK

Create ephemeral key and initialise context based on it

Initialise a ktri based on passed certificate and key

Create ephemeral key

If a suitable wrap algorithm is already set nothing to do

Pick a cipher based on content encryption cipher. If it is DES3 use DES3 wrap otherwise use AES wrap similar to key size.

Encrypt content key in key agreement recipient info

Initialise wrap algorithm parameters

If no originator key set up initialise for ephemeral key the public key ASN1 structure will set the actual public key value.

Initialise KDF algorithm

For each rek, derive KEK, encrypt CEK

www.openssl.org/source/license.html

License

internal/cryptlib.h

cms_lcl.h

internal/asn1_int.h

