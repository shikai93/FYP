Copyright 2009-2016 The OpenSSL Project Authors. All Rights Reserved. Licensed under the OpenSSL license (the "License"). You may not use this file except in compliance with the License. You can obtain a copy in the file LICENSE in the source distribution or at https://www.openssl.org/source/license.html

Get from enveloped data

Setup algorithm identifier for cipher

Initialize recipient info

Since this is overwritten, free up empty structure already there

Setup PBE algorithm

This is an implementation of the key wrapping mechanism in RFC3211, at some point this should go into EVP.

too small

Invalid size

setup IV by decrypting last two blocks

Do a decrypt of last decrypted block to set IV to correct value output it to start of buffer so we don't corrupt decrypted block this works because buffer is at least two block lengths long.

Can now decrypt first n - 1 blocks

Reset IV to original value

Decrypt again

Check check bytes

Check byte failure

Invalid length value

First decide length of output buffer: need header and round up to multiple of block length.

Key too small

Key too large

Set header

Add random padding to end

Encrypt twice

Encrypt/Decrypt content key in PWRI recipient info

Fixup cipher based on AlgorithmIdentifier to set IV etc

Finish password based key derivation to setup key in "ctx"

Finally wrap/unwrap the key

www.openssl.org/source/license.html

License

internal/cryptlib.h

cms_lcl.h

internal/asn1_int.h

ctx

0xff)

0xFF)

0xFF;

0xFF;

0xFF;

