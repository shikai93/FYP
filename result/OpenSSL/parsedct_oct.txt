Copyright 2016 The OpenSSL Project Authors. All Rights Reserved. Licensed under the OpenSSL license (the "License"). You may not use this file except in compliance with the License. You can obtain a copy in the file LICENSE in the source distribution or at https://www.openssl.org/source/license.html

digitally-signed struct header: (1 byte) Hash algorithm (1 byte) Signature algorithm (2 bytes + ?) Signature This explicitly rejects empty signatures: they're invalid for all supported algorithms.

Get hash and signature algorithm

Retrieve signature and check it is consistent with the buffer length

Fixed-length header: struct { Version sct_version; (1 byte) log_id id; (32 bytes) uint64 timestamp; (8 bytes) CtExtensions extensions; (2 bytes + ?) }

If not V1 just cache encoding

(1 byte) Hash algorithm (1 byte) Signature algorithm (2 bytes + ?) Signature

Fixed-length header: struct { (1 byte) Version sct_version; (32 bytes) log_id id; (8 bytes) uint64 timestamp; (2 bytes + ?) CtExtensions extensions; (1 byte) Hash algorithm (1 byte) Signature algorithm (2 bytes + ?) Signature

Use the given stack, but empty it first.

www.openssl.org/source/license.html

License

CT is disabled

ct_locl.h

