Copyright 2001-2017 The OpenSSL Project Authors. All Rights Reserved. Copyright (c) 2002, Oracle and/or its affiliates. All rights reserved Licensed under the OpenSSL license (the "License"). You may not use this file except in compliance with the License. You can obtain a copy in the file LICENSE in the source distribution or at https://www.openssl.org/source/license.html

Use default functions for poin2oct, oct2point and compressed coordinates

Use custom formats for EC_GROUP, EC_POINT and EC_KEY

Curve does not support signing operations

Structure details are not part of the exported interface, so all this may change in future versions.

Various method flags

used by EC_METHOD_get_field_type:

a NID

used by EC_GROUP_new, EC_GROUP_free, EC_GROUP_clear_free, EC_GROUP_copy:

used by EC_GROUP_set_curve_GFp, EC_GROUP_get_curve_GFp,

EC_GROUP_set_curve_GF2m, and EC_GROUP_get_curve_GF2m:

used by EC_GROUP_get_degree:

used by EC_GROUP_check:

used by EC_POINT_new, EC_POINT_free, EC_POINT_clear_free, EC_POINT_copy:

used by EC_POINT_set_to_infinity, EC_POINT_set_Jprojective_coordinates_GFp, EC_POINT_get_Jprojective_coordinates_GFp, EC_POINT_set_affine_coordinates_GFp, ..._GF2m, EC_POINT_get_affine_coordinates_GFp, ..._GF2m, EC_POINT_set_compressed_coordinates_GFp, ..._GF2m:

used by EC_POINT_point2oct, EC_POINT_oct2point:

used by EC_POINT_add, EC_POINT_dbl, ECP_POINT_invert:

used by EC_POINT_is_at_infinity, EC_POINT_is_on_curve, EC_POINT_cmp:

used by EC_POINT_make_affine, EC_POINTs_make_affine:

used by EC_POINTs_mul, EC_POINT_mul, EC_POINT_precompute_mult, EC_POINT_have_precompute_mult (default implementations are used if the 'mul' pointer is 0):

internal functions

'field_mul', 'field_sqr', and 'field_div' can be used by 'add' and 'dbl' so that the same implementations of point operations can be used with different optimized implementations of expensive field operations:

e.g. to Montgomery

e.g. from Montgomery

private key operations

custom ECDH operation

Types and functions to manipulate pre-computed values.

optional

optional NID for named curve

flag to control the asn1 encoding

optional seed for parameters (appears in ASN1)

The following members are handled by the method functions, even if they appear generic

Field specification. For curves over GF(p), this is the modulus; for curves over GF(2^m), this is the irreducible polynomial defining the field.

Field specification for curves over GF(2^m). The irreducible f(t) is then of the form: t^poly[0] + t^poly[1] + ... + t^poly[k] where m = poly[0] > poly[1] > ... > poly[k] = 0. The array is terminated with poly[k+1]=-1. All elliptic curve irreducibles have at most 5 non-zero terms.

Curve coefficients. (Here the assumption is that BIGNUMs can be used or abused for all kinds of fields, not just GF(p).) For characteristic > 3, the curve is defined by a Weierstrass equation of the form y^2 = x^3 + ax + b. For characteristic 2, the curve is defined by an equation of the form y^2 + xy = x^3 + ax^2 + b.

enable optimized point arithmetics for special case

method-specific (e.g., Montgomery structure)

method-specific

method-specific

data for ECDSA inverse

Precomputed values for speed. The PCT_xxx names match the pre_comp.xxx union names; see the SETPRECOMP and HAVEPRECOMP macros, below.

All members except 'meth' are handled by the method functions, even if they appear generic

Jacobian projective coordinates: (X, Y, Z) represents (X/Z^2, Y/Z^3) if Z != 0

enable optimized point arithmetics for special case

method functions in ec_mult.c (ec_lib.c uses these as defaults if group->method->mul is 0)

method functions in ecp_smpl.c

method functions in ecp_mont.c

method functions in ecp_nist.c

method functions in ec2_smpl.c

method functions in ec2_mult.c

method functions in ecp_nistp224.c

method functions in ecp_nistp256.c

method functions in ecp_nistp521.c

utility functions in ecp_nistputil.c

Returns GFp methods using montgomery multiplication, with x86-64 optimized P256. See http://eprint.iacr.org/2013/816. \return EC_METHOD object

EC_METHOD definitions

www.openssl.org/source/license.html

eprint.iacr.org/2013/816.

License

internal/refcount.h

mul

field_mul

field_sqr

field_div

add

dbl

meth

0x520

0x1

0x2

0x4

