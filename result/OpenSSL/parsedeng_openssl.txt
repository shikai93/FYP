Copyright 2001-2016 The OpenSSL Project Authors. All Rights Reserved. Copyright (c) 2002, Oracle and/or its affiliates. All rights reserved Licensed under the OpenSSL license (the "License"). You may not use this file except in compliance with the License. You can obtain a copy in the file LICENSE in the source distribution or at https://www.openssl.org/source/license.html

This testing gunk is implemented (and explained) lower down. It also assumes the application explicitly calls "ENGINE_load_openssl()" because this is no longer automatic in ENGINE_load_builtin_engines().

#define TEST_ENG_OPENSSL_HMAC

#define TEST_ENG_OPENSSL_HMAC_INIT

#define TEST_ENG_OPENSSL_RC4_OTHERS

#define TEST_ENG_OPENSSL_RC4_P_CIPHER

#define TEST_ENG_OPENSSL_SHA_OTHERS

#define TEST_ENG_OPENSSL_SHA_P_INIT

#define TEST_ENG_OPENSSL_SHA_P_UPDATE

#define TEST_ENG_OPENSSL_SHA_P_FINAL

Now check what of those algorithms are actually enabled

The constants used when creating the ENGINE

This internal function is used by ENGINE_openssl() and possibly by the "dynamic" ENGINE support too

If we add errors to this ENGINE, ensure the error handling is setup here

openssl_load_error_strings();

If the "add" worked, it gets a structural reference. So either way, we release our just-created reference.

This stuff is needed if this ENGINE is being compiled into a self-contained shared-library.

ENGINE_DYNAMIC_SUPPORT

This section of code compiles an "alternative implementation" of two modes of RC4 into this ENGINE. The result is that EVP_CIPHER operation for "rc4" should under normal circumstances go via this support rather than the default EVP support. There are other symbols to tweak the testing; TEST_ENC_OPENSSL_RC4_OTHERS - print a one line message to stderr each time we're asked for a cipher we don't support (should not happen). TEST_ENG_OPENSSL_RC4_P_INIT - print a one line message to stderr each time the "init_key" handler is called. TEST_ENG_OPENSSL_RC4_P_CIPHER - ditto for the "cipher" handler.

40 bits

We are returning a list of supported nids

We are being asked for a specific cipher

Much the same sort of comment as for TEST_ENG_OPENSSL_RC4

We are returning a list of supported nids

We are being asked for a specific digest

Experimental HMAC redirection implementation: mainly copied from hm_pmeth.c

HMAC pkey context structure

MD for HMAC use

Temp storage for key

allocate memory for dst->data and a new HMAC_CTX in dst->data->ctx

release HMAC_CTX in dst->data->ctx and memory allocated for dst->data

www.openssl.org/source/license.html

License

internal/cryptlib.h

internal/engine.h

ENGINE_load_openssl()

openssl

Software engine support

dynamic

add

alternative implementation

rc4

re asked for a cipher we don

init_key

cipher

(TEST_ENG_OPENSSL_RC4) test_init_key() called\n

(TEST_ENG_OPENSSL_RC4) test_cipher() called\n

(TEST_ENG_OPENSSL_RC4) returning NULL for

nid %d\n

(TEST_ENG_OPENSSL_SHA) test_sha1_init() called\n

(TEST_ENG_OPENSSL_SHA) test_sha1_update() called\n

(TEST_ENG_OPENSSL_SHA) test_sha1_final() called\n

(TEST_ENG_OPENSSL_SHA) returning NULL for

nid %d\n

(TEST_ENG_OPENSSL_PKEY)Loading Private key %s\n

r

(TEST_ENG_OPENSSL_HMAC) ossl_hmac_init() called\n

key

hexkey

