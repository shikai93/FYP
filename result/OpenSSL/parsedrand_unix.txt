Copyright 1995-2017 The OpenSSL Project Authors. All Rights Reserved. Licensed under the OpenSSL license (the "License"). You may not use this file except in compliance with the License. You can obtain a copy in the file LICENSE in the source distribution or at https://www.openssl.org/source/license.html

The following algorithm repeatedly samples the real-time clock (RTC) to generate a sequence of unpredictable data. The algorithm relies upon the uneven execution speed of the code (due to factors such as cache misses, interrupts, bus activity, and scheduling) and upon the rather large relative difference between the speed of the clock and the rate at which it can be read. If it is ported to an environment where execution speed is more constant or where the RTC ticks at a much slower rate, or the clock can be read with fewer instructions, it is likely that the results would be far more predictable. This should only be used for legacy platforms. As a precaution, we generate four times the required amount of seed data.

Seed with the gid, pid, and uid, to ensure some variation between different processes.

burn some cpu; hope for interrupts, cache collisions, bus interference, etc.

sleep for 1/1024 of a second (976 us).

sleep for 1/65536 of a second (15 us).

Get wall clock time, take 8 bits.

Try the various seeding methods in turn, exit when succesful.

Not yet implemented.

www.openssl.org/source/license.html

License

e_os.h

internal/cryptlib.h

rand_lcl.h

UEFI and VXWorks only support seeding NONE

Unsupported seeding method configured; must be os

Unsupported HP-PA and IA32 at the same time.

Must have one of HP-PA or IA32

Seeding uses EGD but EGD is turned off or no device given

Seeding uses urandom but DEVRANDOM is not configured

OS seeding requires DEVRANDOM to be configured

librandom not (yet) supported

rb

0xFF);

