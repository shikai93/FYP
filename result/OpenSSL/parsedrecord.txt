Copyright 1995-2016 The OpenSSL Project Authors. All Rights Reserved. Licensed under the OpenSSL license (the "License"). You may not use this file except in compliance with the License. You can obtain a copy in the file LICENSE in the source distribution or at https://www.openssl.org/source/license.html

These structures should be considered PRIVATE to the record layer. No non-record layer code should be using these structures in any way.

at least SSL3_RT_MAX_PACKET_SIZE bytes, see ssl3_setup_buffers()

default buffer size (or 0 if no default set)

buffer size

where to 'copy from'

how many bytes left

Record layer version

r

type of record

r

How many bytes available

rw

How many bytes were available before padding was removed? This is used to implement the MAC check in constant time for CBC records.

rw

read/write offset into 'buf'

r

pointer to the record data

rw

where the decode bytes are

rw

only used with decompression - malloc()ed

r

Whether the data from this record has already been read or not

r

epoch number, needed by DTLS1

r

sequence number, needed by DTLS1

r

Track 32 packets on 32-bit systems and 64 - on 64-bit systems

Max record number seen so far, 64-bit value in big-endian encoding

The current data and handshake epoch. This is initially undefined, and starts at zero once the initial handshake is completed

records being received in the current epoch

renegotiation starts a new set of sequence numbers

Received handshake records (processed and unprocessed)

Buffered application records. Only for records between CCS and Finished to prevent either protocol violation or unnecessary message loss.

save last and current sequence numbers for retransmissions

This structure should be considered "opaque" to anything outside of the record layer. No non-record layer code should be accessing the members of this structure.

The parent SSL structure

Read as many input bytes as possible (for non-blocking reads)

where we are when reading

How many pipelines can be used to read data

How many pipelines can be used to write data

read IO goes into here

write IO goes into here

each decoded record goes in here

used internally to point at a raw packet

number of bytes sent so far

The number of consecutive empty records we have received

partial write - check the numbers match

number bytes written

number of bytes submitted

Set to true if this is the first record in a connection

Count of the number of consecutive warning alerts received

The following macros/functions represent the libssl internal API to the record layer. Any libssl code may call these functions/macros

www.openssl.org/source/license.html

License

copy from

buf

opaque

