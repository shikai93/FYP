Copyright 1999-2016 The OpenSSL Project Authors. All Rights Reserved. Licensed under the OpenSSL license (the "License"). You may not use this file except in compliance with the License. You can obtain a copy in the file LICENSE in the source distribution or at https://www.openssl.org/source/license.html

Strings are special: normally an lhash entry will point to a single (somewhat) mutable object. In the case of strings: a) Instead of a single char, there is an array of chars, NUL-terminated. b) The string may have be immutable. So, they need their own declarations. Especially important for type-checking tools, such as Deputy. In practice, however, it appears to be hard to have a const string. For now, I'm settling for dealing with the fact it is a string at all.

Confusingly, LHASH_OF(STRING) deals with char throughout, but STACK_OF(STRING) is really more like STACK_OF(char), only, as mentioned above, instead of a single char each entry is a NUL-terminated array of chars. So, we have to implement STRING specially for STACK_OF. This is dealt with in the autogenerated macros below.

Similarly, we sometimes use a block of characters, NOT nul-terminated. These should also be distinguished from "normal" stacks.

www.openssl.org/source/license.html

License

C

normal

