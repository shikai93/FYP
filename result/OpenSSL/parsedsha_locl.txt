Copyright 1995-2016 The OpenSSL Project Authors. All Rights Reserved. Licensed under the OpenSSL license (the "License"). You may not use this file except in compliance with the License. You can obtain a copy in the file LICENSE in the source distribution or at https://www.openssl.org/source/license.html

As pointed out by Wei Dai <weidai@eskimo.com>, F() below can be simplified to the code in F_00_19. Wei attributes these optimisations to Peter Gutmann's SHS code, and he attributes it to Rich Schroeppel. #define F(x,y,z) (((x) & (y)) | ((~(x)) & (z))) I've just become aware of another tweak to be made, again from Wei Dai, in F_40_59, (x&a)|(y&a) -> (x|y)&a

Originally X was an array. As it's automatic it's natural to expect RISC compiler to accommodate at least part of it in the register bank, isn't it? Unfortunately not all compilers "find" this expectation reasonable:-( On order to make such compilers generate better code I replace X[] with a bunch of X0, X1, etc. See the function body below... <appro@fy.chalmers.se>

However! Some compilers (most notably HP C) get overwhelmed by that many local variables so that we have to have the way to fall down to the original behavior.

OPENSSL_SMALL_FOOTPRINT

www.openssl.org/source/license.html

License

internal/md32_common.h

s SHS code, and he attributes it to Rich Schroeppel. #define * F(x,y,z) (((x) & (y)) | ((~(x)) & (z))) I

s automatic it

find

0x67452301UL

0xefcdab89UL

0x98badcfeUL

0x10325476UL

0xc3d2e1f0UL

0x5a827999UL

0x6ed9eba1UL

0x8f1bbcdcUL

0xca62c1d6UL

0xffffffffL;

0xffffffffL;

0xffffffffL;

0xffffffffL;

0xffffffffL;

0xffffffffL;

0xffffffffL;

0xffffffffL;

0xffffffffL;

0xffffffffL;

