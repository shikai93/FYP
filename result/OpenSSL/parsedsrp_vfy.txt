Copyright 2011-2016 The OpenSSL Project Authors. All Rights Reserved. Licensed under the OpenSSL license (the "License"). You may not use this file except in compliance with the License. You can obtain a copy in the file LICENSE in the source distribution or at https://www.openssl.org/source/license.html

Convert a base64 string into raw byte array representation.

Four bytes in src become three bytes output.

Convert a raw byte string into a null-terminated base64 ASCII string.

search if we have already one...

it is the first time that we find it

this function parses verifier file. Format is: string(index):base64(N):base64(g):0 string(username):base64(v):base64(salt):int(index)

we add this couple in the internal Stack

it is a user ....

abandon responsibility

this means that we want to simulate a default user

there may be still some leaks to fix, if this fails, the application terminates most likely

DEPRECATED: use SRP_VBASE_get1_by_user instead. This method ignores the configured seed and fails for an unknown user. Ownership of the returned pointer is not released to the caller. In other words, caller must not free the result.

Ownership of the returned pointer is released to the caller. In other words, caller must free the result once done.

if the user is unknown we set parameters as well if we have a seed_key

create a verifier (salt,verifier,g and N are in base64)

create a verifier (salt,verifier,g and N are BIGNUMs). If salt != NULL then the provided salt will be used. On successful exit verifier will point to a newly allocated BIGNUM containing the verifier and (if a salt was not provided) salt will be populated with a newly allocated BIGNUM containing a random salt. The caller is responsible for freeing the allocated salt and verifier BIGNUMS.

www.openssl.org/source/license.html

License

internal/cryptlib.h

*

0x10100000L

