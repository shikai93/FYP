Copyright 2004-2016 The OpenSSL Project Authors. All Rights Reserved. Licensed under the OpenSSL license (the "License"). You may not use this file except in compliance with the License. You can obtain a copy in the file LICENSE in the source distribution or at https://www.openssl.org/source/license.html

Note that the below code is not MT-safe in respect to msg buffer, but what's the worst thing that can happen? Error message might be misleading or corrupted. As error condition is fatal and should never be risen, I accept the risk...

One can argue that I should have used InterlockedExchangePointer or something to update static variables and table[]. Well, store instructions are as atomic as they can get and assigned values are effectively constant... So that volatile qualifier should be sufficient [it prohibits compiler to reorder memory access instructions].

revalidate

make some in advance...

www.openssl.org/source/license.html

License

uplink.h

%s\n

%S\n

OPENSSL_Uplink(%p,%02X):

unimplemented function

no host application

OPENSSL_Applink

no OPENSSL_Applink

no ApplinkTable

Add more stubs...

hello, world!\n

Copyright 2004-2016 The OpenSSL Project Authors. All Rights Reserved. Licensed under the OpenSSL license (the "License"). You may not use this file except in compliance with the License. You can obtain a copy in the file LICENSE in the source distribution or at https://www.openssl.org/source/license.html

www.openssl.org/source/license.html

License

applink.c

