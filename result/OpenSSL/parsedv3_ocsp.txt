Copyright 2000-2016 The OpenSSL Project Authors. All Rights Reserved. Licensed under the OpenSSL license (the "License"). You may not use this file except in compliance with the License. You can obtain a copy in the file LICENSE in the source distribution or at https://www.openssl.org/source/license.html

OCSP extensions and a couple of CRL entry extensions

OCSP nonce. This is needs special treatment because it doesn't have an ASN1 encoding at all: it just contains arbitrary data.

Nocheck is just a single NULL. Don't print anything and always set it

www.openssl.org/source/license.html

License

internal/cryptlib.h

ocsp_lcl.h

../x509v3/ext_dat.h

%*scrlUrl:



\n

%*scrlNum:



\n

%*scrlTime:



\n

%*s



%*s



t have an * ASN1 encoding at all: it just contains arbitrary data. */ static void *ocsp_nonce_new(void) { return ASN1_OCTET_STRING_new(); } static int i2d_ocsp_nonce(void *a, unsigned char **pp) { ASN1_OCTET_STRING *os = a; if (pp) { memcpy(*pp, os->data, os->length); *pp += os->length; } return os->length; } static void *d2i_ocsp_nonce(void *a, const unsigned char **pp, long length) { ASN1_OCTET_STRING *os, **pos; pos = a; if (pos == NULL || *pos == NULL) { os = ASN1_OCTET_STRING_new(); if (os == NULL) goto err; } else { os = *pos; } if (!ASN1_OCTET_STRING_set(os, *pp, length)) goto err; *pp += length; if (pos) *pos = os; return os; err: if ((pos == NULL) || (*pos != os)) ASN1_OCTET_STRING_free(os); OCSPerr(OCSP_F_D2I_OCSP_NONCE, ERR_R_MALLOC_FAILURE); return NULL; } static void ocsp_nonce_free(void *a) { ASN1_OCTET_STRING_free(a); } static int i2r_ocsp_nonce(const X509V3_EXT_METHOD *method, void *nonce, BIO *out, int indent) { if (BIO_printf(out, "%*s", indent, "") <= 0) return 0; if (i2a_ASN1_STRING(out, nonce, V_ASN1_OCTET_STRING) <= 0) return 0; return 1; } /* Nocheck is just a single NULL. Don

%*sIssuer:



\n%*s



-

