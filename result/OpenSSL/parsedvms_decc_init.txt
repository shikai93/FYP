Copyright 2010-2016 The OpenSSL Project Authors. All Rights Reserved. Licensed under the OpenSSL license (the "License"). You may not use this file except in compliance with the License. You can obtain a copy in the file LICENSE in the source distribution or at https://www.openssl.org/source/license.html

---------------------------------------------------------------------- decc_init() On non-VAX systems, uses LIB$INITIALIZE to set a collection of C RTL features without using the DECC$ logical name method. ----------------------------------------------------------------------

Global storage.

Flag to sense if decc_init() was called.

Structure to hold a DECC$ feature name and its desired value.

Array of DECC$ feature names and their desired values. Note: DECC$ARGV_PARSE_STYLE is the urgent one.

Preserve command-line case with SET PROCESS/PARSE_STYLE=EXTENDED

Preserve case for file names on ODS5 disks.

Enable multiple dots (and most characters) in ODS5 file names, while preserving VMS-ness of ";version".

List terminator.

The note below is for historical purpose. On VMS now we always copy argv "safely." 2011-03-22 SMS. If we have 32-bit pointers everywhere, then we're safe, and we bypass this mess, as on non-VMS systems. Problem 1: Compaq/HP C before V7.3 always used 32-bit pointers for argv[]. Fix 1: For a 32-bit argv[], when we're using 64-bit pointers everywhere else, we always allocate and use a 64-bit duplicate of argv[]. Problem 2: Compaq/HP C V7.3 (Alpha, IA64) before ECO1 failed to NULL-terminate a 64-bit argv[]. (As this was written, the compiler ECO was available only on IA64.) Fix 2: Unless advised not to (VMS_TRUST_ARGV), we test a 64-bit argv[argc] for NULL, and, if necessary, use a (properly) NULL-terminated (64-bit) duplicate of argv[]. The same code is used in either case to duplicate argv[]. Some of these decisions could be handled in preprocessing, but the code tends to get even uglier, and the penalty for deciding at compile- or run-time is tiny.

LIB$INITIALIZE initialization function.

Get debug option.

Set the global flag to indicate that LIB$INITIALIZE worked.

Loop through all items in the decc_feat_array[].

Get the feature index.

Valid item. Collect its properties.

Check the validity of our desired value.

Valid value. Set it if necessary.

Invalid DECC feature value.

Invalid DECC feature name.

Get "decc_init()" into a valid, loaded LIB$INITIALIZE PSECT.

Establish the LIB$INITIALIZE PSECTs, with proper alignment and other attributes. Note that "nopic" is significant only on VAX.

Fake reference to ensure loading the LIB$INITIALIZE PSECT.

def USE_DECC_INIT

Dummy code to avoid a %CC-W-EMPTYFILE complaint.

def USE_DECC_INIT

www.openssl.org/source/license.html

License

apps.h

DECC$ARGV_PARSE_STYLE

DECC$EFS_CASE_PRESERVE

;version

DECC$EFS_CHARSET

safely.

re safe, and * we bypass this mess, as on non-VMS systems. * Problem 1: Compaq/HP C before V7.3 always used 32-bit * pointers for argv[]. * Fix 1: For a 32-bit argv[], when we

argv copy

OPENSSL_DEBUG_DECC_INIT

%s = %d, sts = %d.\n

INVALID DECC$FEATURE VALUE, %d: %d <= %s <= %d.\n

UNKNOWN DECC$FEATURE: %s.\n

DECC_INIT complete.\n

decc_init()

nopic

LIB$INITIALIZ

LIB$INITIALIZE

