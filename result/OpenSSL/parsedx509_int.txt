Copyright 2015-2016 The OpenSSL Project Authors. All Rights Reserved. Licensed under the OpenSSL license (the "License"). You may not use this file except in compliance with the License. You can obtain a copy in the file LICENSE in the source distribution or at https://www.openssl.org/source/license.html

Internal X509 structures and functions: not for application use

Note: unless otherwise stated a field pointer is mandatory and should never be set to NULL: the ASN.1 code and accessors rely on mandatory fields never being NULL.

name entry structure, equivalent to AttributeTypeAndValue defined in RFC5280 et al.

AttributeType

AttributeValue

index of RDNSequence for this entry

temp variable

Name from RFC 5280.

DN components

true if 'bytes' needs to be built

cached encoding: cannot be NULL

canonical encoding used for rapid Name comparison

X509_NAME

Signature info structure

NID of message digest

NID of public key algorithm

Security bits

Various flags

PKCS#10 certificate request

cached encoding of signed part

version, defaults to v1(0) so can be NULL

certificate request DN

public key of request

Zero or more attributes. NB: although attributes is a mandatory field some broken encodings omit it so this may be NULL in that case.

signed certificate request data

signature algorithm

signature

version: defaults to v1(0) so may be NULL

signature algorithm

CRL issuer name

lastUpdate field

nextUpdate field: optional

revoked entries: optional

extensions: optional

encoding of signed portion of CRL

signed CRL data

CRL signature algorithm

CRL signature

Cached copies of decoded extension values, since extensions are optional any of these can be NULL.

Convenient breakdown of IDP

CRL and base CRL numbers for delta processing

hash of CRL

alternative method to handle this CRL

revoked entry serial number

revocation date

CRL entry extensions: optional

decoded value of CRLissuer extension: set if indirect CRL

revocation reason: set to CRL_REASON_NONE if reason extension absent

CRL entries are reordered for faster lookup of serial numbers. This field contains the original load sequence for this entry.

This stuff is certificate "auxiliary info": it contains details which are useful in certificate stores and databases. When used this is tagged onto the end of the certificate itself. OpenSSL specific structure not defined in any RFC.

trusted uses

rejected uses

"friendly name"

key id of private key

other unspecified info

[ 0 ] default of v1

[ 1 ] optional in v2

[ 2 ] optional in v2

[ 3 ] optional in v3

These contain copies of various extension values

X509

This is a used when verifying cert chains. Since the gathering of the cert chain can take some time (and have to be 'retried', this needs to be kept and passed around.

X509_STORE_CTX

The following are set by the caller

The cert to check

chain of X509s - untrusted - passed in

set of CRLs passed in

Other info for use with get_issuer()

Callbacks for various operations

called to verify a certificate

error callback

get issuers cert from ctx

check issued

Check revocation status of chain

retrieve CRL

Check CRL validity

Check certificate against CRL

Check policy status of the chain

The following is built up

if 0, rebuild chain

number of untrusted certs

chain of X509s - built up and trusted

Valid policy tree

Require explicit policy value

When something goes wrong, this is why

cert currently being tested as valid issuer

current CRL

score of current CRL

Reason mask

For CRL path validation: parent context

signed via bare TA public key, rather than CA certificate

PKCS#8 private key info structure

one of the above types

www.openssl.org/source/license.html

License

internal/refcount.h

bytes

auxiliary info

friendly name

retried

