Copyright 1999-2016 The OpenSSL Project Authors. All Rights Reserved. Licensed under the OpenSSL license (the "License"). You may not use this file except in compliance with the License. You can obtain a copy in the file LICENSE in the source distribution or at https://www.openssl.org/source/license.html

WARNING: the following table should be kept in order of trust and without any gaps so we can just subtract the minimum trust value to get an index into the table

We get this as a default value

This is set according to what we change: application can't set it

This will always be set for application modified trust entries

Get existing entry if any

Need a new entry

OPENSSL_free existing name if dynamic

dup supplied name

Keep the dynamic flag of existing entry

Set all other flags

If its a new entry manage the dynamic table

Declare the chain verified if the desired trust OID is not rejected in any auxiliary trust info for this certificate, and the OID is either expressly trusted, or else either "anyEKU" is trusted, or the certificate is self-signed.

Declare the chain verified only if the desired trust OID is not rejected and is expressly trusted. Neither "anyEKU" nor "compat" trust in self-signed certificates apply.

Call for side-effect of computing hash and caching extensions

Reject when explicit trust EKU are set and none match. Returning untrusted is enough for for full chains that end in self-signed roots, because when explicit trust is specified it suppresses the default blanket trust of self-signed objects. But for partial chains, this is not enough, because absent a similar trust-self-signed policy, non matching EKUs are indistinguishable from lack of EKU constraints. Therefore, failure to match any trusted purpose must trigger an explicit reject.

Not rejected, and there is no list of accepted uses, try compat.

www.openssl.org/source/license.html

License

internal/cryptlib.h

internal/x509_int.h

compatible

SSL Client

SSL Server

S/MIME email

Object Signer

OCSP responder

OCSP request

TSA server

anyEKU

anyEKU

compat

