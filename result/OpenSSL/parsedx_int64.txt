Copyright 2017 The OpenSSL Project Authors. All Rights Reserved. Licensed under the OpenSSL license (the "License"). You may not use this file except in compliance with the License. You can obtain a copy in the file LICENSE in the source distribution or at https://www.openssl.org/source/license.html

Custom primitive types for handling int32_t, int64_t, uint32_t, uint64_t. This converts between an ASN1_INTEGER and those types directly. This is preferred to using the LONG / ZLONG primitives.

We abuse the ASN1_ITEM fields |size| as a flags field

this exists to bypass broken gcc optimization

use memcpy, because we may not be uint64_t aligned

i2c_uint64_int() assumes positive values

c2i_uint64_int() returns positive values

32-bit variants

this exists to bypass broken gcc optimization

use memcpy, because we may not be uint32_t aligned

i2c_uint64_int() assumes positive values

Absolute value of INT32_MIN: we can't just use -INT32_MIN as it produces overflow warnings.

Define the primitives themselves

www.openssl.org/source/license.html

License

internal/cryptlib.h

internal/numbers.h

asn1_locl.h

%jd\n

%ju\n

%d\n

%u\n

INT32

UINT32

INT64

UINT64

ZINT32

ZUINT32

ZINT64

ZUINT64

