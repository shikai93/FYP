Copyright 1995-2016 The OpenSSL Project Authors. All Rights Reserved. Licensed under the OpenSSL license (the "License"). You may not use this file except in compliance with the License. You can obtain a copy in the file LICENSE in the source distribution or at https://www.openssl.org/source/license.html

X509 top level structure needs a bit of customisation

X509_AUX ASN1 routines. X509_AUX is the name given to a certificate with extra info tagged on the end. Since these functions set how a certificate is trusted they should only be used when the certificate comes from a reliable source such as local storage.

Save start position

If certificate unreadable then forget it

update length

Serialize trusted certificate to pp or just return the required buffer length if pp == NULL. We ultimately want to avoid modifying pp in the error path, but that depends on similar hygiene in lower-level functions. Here we avoid compounding the problem.

This might perturb pp on error, but fixing that belongs in i2d_X509() not here. It should be that if a == NULL length is zero, but we check both just in case.

Serialize trusted certificate to pp, or just return the required buffer length if pp == NULL. When pp is not NULL, but pp == NULL, we allocate the buffer, but since we're writing two ASN.1 objects back to back, we can't have i2d_X509() do the allocation, nor can we allow i2d_X509_CERT_AUX() to increment the allocated buffer.

Buffer provided by caller

Obtain the combined length

Allocate requisite combined storage

Push error onto error stack?

Encode, but keep pp at the originally malloced pointer

www.openssl.org/source/license.html

License

internal/cryptlib.h

internal/x509_int.h

re writing two ASN.1 objects back to back, we can

